name: üõ† Fix PHP, üêò Test and ‚öô Deploy Check
on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontendbuild:
    runs-on: ubuntu-latest
    name: üõ† Build front-end
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: üîç Read .env
        run: grep -E 'NODE_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env

      - name: üñ±Ô∏è Set Node v${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: üì• Install front-end dependencies
        run: npm ci --ignore-scripts

      - name: lint with prettier
        run: npx prettier --write resources/

      - name: Pull the latest changes
        run: git pull origin ${{ github.head_ref }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automatic Blade linting (Prettier Blade)
          skip_fetch: true

      - name: üî® build front-end
        run: npm run build --if-present

      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: public/build
  call-phplint:
    name: Fix php
    uses: ./.github/workflows/fix_php.yml
    secrets: inherit
  pest:
    name: üêò Pest Tests
    runs-on: ubuntu-latest
    needs: [ call-phplint, frontendbuild ]
    services:
      mysql:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: üõéÔ∏è Checkout project
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: üîç Read .env
        run: (grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env)

      - name: üñ±Ô∏è Setup PHP v${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - uses: actions/download-artifact@v4
        with:
          name: Build
          path: public/build

      - name: Cache Pest test results
        uses: actions/cache@v4
        with:
          path: .tmp/phpunit.cache/test-results
          key: ${{ runner.os }}-pest-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-pest-

      - run: mkdir -p .tmp/phpunit.cache

      - name: üêò Run Pest tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_USERNAME: root
          DB_PASSWORD: secret
          DB_HOST: 127.0.0.1
        run: |
          php artisan key:generate
          php artisan migrate
          vendor/bin/pest --ci

      - name: Check if laravel caching works
        run: |
          php artisan optimize:clear
          php artisan optimize


      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: laravel-failure-artifact
          path: storage/logs/laravel.log
  dusk:
    name: üåú Dusk Tests
    runs-on: ubuntu-latest
    needs: [ call-phplint, frontendbuild ]
    services:
      mysql:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: üõéÔ∏è Checkout project
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: üîç Read .env
        run: (grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env)

      - name: üñ±Ô∏è Setup PHP v${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - uses: actions/download-artifact@v4
        with:
          name: Build
          path: public/build

      - name: Cache Dusk test results
        uses: actions/cache@v4
        with:
          path: .tmp/phpunit.cache/test-results
          key: ${{ runner.os }}-dusk-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-dusk-

      - run: mkdir -p .tmp/phpunit.cache

      - name: üåú Run dusk tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_USERNAME: root
          DB_PASSWORD: secret
          DB_HOST: 127.0.0.1
        run: |
          php artisan key:generate
          php artisan migrate
          php artisan dusk:chrome-driver --detect
          ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &
          php artisan serve --no-reload &
          php artisan dusk --pest
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: console
          path: tests/Browser/console

