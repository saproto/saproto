name: üõ† Fix PHP, üêò Test and ‚öô Deploy Check
on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pest:
    name: üêò Pest Tests
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_BROWSERS_PATH: 0
    services:
      mysql:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: üõéÔ∏è Checkout project
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: üîç Read .env
        run: (grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env)

      - name: üñ±Ô∏è Setup PHP v${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - run: php artisan typescript:transform

      - uses: actions/cache@v4
        with:
          path: .tmp/rector
          key: ${{ runner.os }}-rector-${{ github.run_id }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-rector-

      - run: mkdir -p .tmp/rector

      - name: Run rector
        run: vendor/bin/rector --ansi

      - name: Cache Pint
        uses: actions/cache@v4
        with:
          path: .tmp/pint.cache
          key: ${{ runner.os }}-pint-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-pint-

      - name: Run pint
        run: ./vendor/bin/pint --diff=master --parallel

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: PHP Automatic Fixing (Pint & Rector)
          skip_fetch: true

      - name: üîç Read .env
        run: grep -E 'NODE_VERSION' .env.prod >> $GITHUB_ENV

      - name: üñ±Ô∏è Set Node v${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: üì• Install front-end dependencies
        run: npm ci --ignore-scripts

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            resources:
              - 'resources/**'

      - name: lint with eslint
        if: steps.changes.outputs.resources == 'true'
        run: npx eslint resources/ --fix

      - name: lint with prettier
        if: steps.changes.outputs.resources == 'true'
        run: npx prettier --write resources/

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automatic linting (Prettier and eslint)
          skip_fetch: true

      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      - name: üî® build front-end
        run: npm run build --if-present

      - name: Cache Pest test results
        uses: actions/cache@v4
        with:
          path: .tmp/phpunit.cache/test-results
          key: ${{ runner.os }}-pest-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-pest-

      - run: mkdir -p .tmp/phpunit.cache

      - name: üêò Run Pest tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_USERNAME: root
          DB_PASSWORD: secret
          DB_HOST: 127.0.0.1
        run: |
          php artisan key:generate
          php artisan migrate
          vendor/bin/pest --ci --parallel

      - name: Check if laravel caching works
        run: |
          php artisan optimize:clear
          php artisan optimize

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: laravel-failure-artifact
          path: storage/logs/laravel.log

  larastan:
    name: üß† Analyse code statically with phpstan
    runs-on: ubuntu-latest
    steps:
      - name: üõéÔ∏è Checkout project
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: üîç Read .env
        run: (grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env)

      - name: üñ±Ô∏è Setup PHP v${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - name: Cache PHPStan results
        uses: actions/cache@v4
        with:
          path: tmp
          key: ${{ runner.os }}-phpstan-${{ hashFiles('phpstan.neon', 'composer.lock') }}
          restore-keys: ${{ runner.os }}-phpstan-

      - name: generate laravel app key
        run: php artisan key:generate

      - name: run laravel-ide helper
        run: php artisan ide-helper:generate

      - name: üß† Run PHPStan static analysis
        run: vendor/bin/phpstan analyse

